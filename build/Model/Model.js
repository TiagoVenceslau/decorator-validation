"use strict";

var __spreadArray = this && this.__spreadArray || function (to, from) {
  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) to[j] = from[i];

  return to;
};

Object.defineProperty(exports, "__esModule", {
  value: true
});

var validation_1 = require("../validation");

var utils_1 = require("../utils");

var Model = function () {
  function Model(model) {
    Model.constructFromObject(this, model);
  }

  Model.prototype.hasErrors = function () {
    var args = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      args[_i] = arguments[_i];
    }

    return validation_1.validate(this);
  };

  Model.prototype.equals = function (obj) {
    var exceptions = [];

    for (var _i = 1; _i < arguments.length; _i++) {
      exceptions[_i - 1] = arguments[_i];
    }

    return utils_1.isEqual.apply(void 0, __spreadArray([this, obj], exceptions));
  };

  Model.constructFromObject = function (self, obj) {
    for (var prop in obj) if (obj.hasOwnProperty(prop) && self.hasOwnProperty(prop)) self[prop] = obj[prop];

    return self;
  };

  return Model;
}();

exports.default = Model;
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIk1vZGVsL01vZGVsLmpzIiwiTW9kZWwvTW9kZWwudHMiXSwibmFtZXMiOlsiX19zcHJlYWRBcnJheSIsInRvIiwiZnJvbSIsImkiLCJpbCIsImxlbmd0aCIsImoiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsInZhbGlkYXRpb25fMSIsInJlcXVpcmUiLCJ1dGlsc18xIiwiTW9kZWwiLCJtb2RlbCIsImNvbnN0cnVjdEZyb21PYmplY3QiLCJwcm90b3R5cGUiLCJoYXNFcnJvcnMiLCJhcmdzIiwiX2kiLCJhcmd1bWVudHMiLCJ2YWxpZGF0ZSIsImVxdWFscyIsIm9iaiIsImV4Y2VwdGlvbnMiLCJpc0VxdWFsIiwiYXBwbHkiLCJzZWxmIiwicHJvcCIsImhhc093blByb3BlcnR5IiwiZGVmYXVsdCJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBQ0EsSUFBSUEsYUFBYSxHQUFJLFFBQVEsS0FBS0EsYUFBZCxJQUFnQyxVQUFVQyxFQUFWLEVBQWNDLElBQWQsRUFBb0I7QUFDcEUsT0FBSyxJQUFJQyxDQUFDLEdBQUcsQ0FBUixFQUFXQyxFQUFFLEdBQUdGLElBQUksQ0FBQ0csTUFBckIsRUFBNkJDLENBQUMsR0FBR0wsRUFBRSxDQUFDSSxNQUF6QyxFQUFpREYsQ0FBQyxHQUFHQyxFQUFyRCxFQUF5REQsQ0FBQyxJQUFJRyxDQUFDLEVBQS9ELEVBQ0lMLEVBQUUsQ0FBQ0ssQ0FBRCxDQUFGLEdBQVFKLElBQUksQ0FBQ0MsQ0FBRCxDQUFaOztBQUNKLFNBQU9GLEVBQVA7QUFDSCxDQUpEOztBQUtBTSxNQUFNLENBQUNDLGNBQVAsQ0FBc0JDLE9BQXRCLEVBQStCLFlBQS9CLEVBQTZDO0FBQUVDLEVBQUFBLEtBQUssRUFBRTtBQUFULENBQTdDOztBQ05BLElBQUFDLFlBQUEsR0FBQUMsT0FBQSxDQUFBLGVBQUEsQ0FBQTs7QUFFQSxJQUFBQyxPQUFBLEdBQUFELE9BQUEsQ0FBQSxVQUFBLENBQUE7O0FBZ0JBLElBQUFFLEtBQUEsR0FBQSxZQUFBO0FBT0ksV0FBQUEsS0FBQSxDQUFzQkMsS0FBdEIsRUFBd0M7QUFDcENELElBQUFBLEtBQUssQ0FBQ0UsbUJBQU4sQ0FBMEIsSUFBMUIsRUFBZ0NELEtBQWhDO0FBQ0g7O0FBU01ELEVBQUFBLEtBQUEsQ0FBQUcsU0FBQSxDQUFBQyxTQUFBLEdBQVAsWUFBQTtBQUFpQixRQUFBQyxJQUFBLEdBQUEsRUFBQTs7QURyQmIsU0NxQmEsSUFBQUMsRUFBQSxHQUFBLENEckJiLEVDcUJhQSxFQUFBLEdBQUFDLFNBQUEsQ0FBQWhCLE1EckJiLEVDcUJhZSxFQUFBLEVEckJiLEVDcUIyQjtBQUFkRCxNQUFBQSxJQUFBLENBQUFDLEVBQUEsQ0FBQSxHQUFBQyxTQUFBLENBQUFELEVBQUEsQ0FBQTtBRG5CWjs7QUNvQkQsV0FBT1QsWUFBQSxDQUFBVyxRQUFBLENBQVMsSUFBVCxDQUFQO0FBQ0gsR0FGTTs7QUFVQVIsRUFBQUEsS0FBQSxDQUFBRyxTQUFBLENBQUFNLE1BQUEsR0FBUCxVQUFjQyxHQUFkLEVBQXNCO0FBQUUsUUFBQUMsVUFBQSxHQUFBLEVBQUE7O0FEeEJwQixTQ3dCb0IsSUFBQUwsRUFBQSxHQUFBLENEeEJwQixFQ3dCb0JBLEVBQUEsR0FBQUMsU0FBQSxDQUFBaEIsTUR4QnBCLEVDd0JvQmUsRUFBQSxFRHhCcEIsRUN3QjJDO0FBQXZCSyxNQUFBQSxVQUFBLENBQUFMLEVBQUEsR0FBQSxDQUFBLENBQUEsR0FBQUMsU0FBQSxDQUFBRCxFQUFBLENBQUE7QUR0Qm5COztBQ3VCRCxXQUFPUCxPQUFBLENBQUFhLE9BQUEsQ0FBT0MsS0FBUCxDQUFPLEtBQUEsQ0FBUCxFQUFPM0IsYUFBQSxDQUFBLENBQUMsSUFBRCxFQUFPd0IsR0FBUCxDQUFBLEVBQWVDLFVBQWYsQ0FBUCxDQUFQO0FBQ0gsR0FGTTs7QUFhT1gsRUFBQUEsS0FBQSxDQUFBRSxtQkFBQSxHQUFkLFVBQW1EWSxJQUFuRCxFQUE0REosR0FBNUQsRUFBd0U7QUFDcEUsU0FBSyxJQUFJSyxJQUFULElBQWlCTCxHQUFqQixFQUNJLElBQUdBLEdBQUcsQ0FBQ00sY0FBSixDQUFtQkQsSUFBbkIsS0FBNEJELElBQUksQ0FBQ0UsY0FBTCxDQUFvQkQsSUFBcEIsQ0FBL0IsRUFDSUQsSUFBSSxDQUFDQyxJQUFELENBQUosR0FBYUwsR0FBRyxDQUFDSyxJQUFELENBQWhCOztBQUNSLFdBQU9ELElBQVA7QUFDSCxHQUxhOztBQU1sQixTQUFBZCxLQUFBO0FBL0NBLENBQUEsRUFBQTs7QURpQkFMLE9BQU8sQ0FBQ3NCLE9BQVIsR0FBa0JqQixLQUFsQiIsImZpbGUiOiJNb2RlbC9Nb2RlbC5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fc3ByZWFkQXJyYXkgPSAodGhpcyAmJiB0aGlzLl9fc3ByZWFkQXJyYXkpIHx8IGZ1bmN0aW9uICh0bywgZnJvbSkge1xuICAgIGZvciAodmFyIGkgPSAwLCBpbCA9IGZyb20ubGVuZ3RoLCBqID0gdG8ubGVuZ3RoOyBpIDwgaWw7IGkrKywgaisrKVxuICAgICAgICB0b1tqXSA9IGZyb21baV07XG4gICAgcmV0dXJuIHRvO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciB2YWxpZGF0aW9uXzEgPSByZXF1aXJlKFwiLi4vdmFsaWRhdGlvblwiKTtcbnZhciB1dGlsc18xID0gcmVxdWlyZShcIi4uL3V0aWxzXCIpO1xudmFyIE1vZGVsID0gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBNb2RlbChtb2RlbCkge1xuICAgICAgICBNb2RlbC5jb25zdHJ1Y3RGcm9tT2JqZWN0KHRoaXMsIG1vZGVsKTtcbiAgICB9XG4gICAgTW9kZWwucHJvdG90eXBlLmhhc0Vycm9ycyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGFyZ3MgPSBbXTtcbiAgICAgICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGFyZ3VtZW50cy5sZW5ndGg7IF9pKyspIHtcbiAgICAgICAgICAgIGFyZ3NbX2ldID0gYXJndW1lbnRzW19pXTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdmFsaWRhdGlvbl8xLnZhbGlkYXRlKHRoaXMpO1xuICAgIH07XG4gICAgTW9kZWwucHJvdG90eXBlLmVxdWFscyA9IGZ1bmN0aW9uIChvYmopIHtcbiAgICAgICAgdmFyIGV4Y2VwdGlvbnMgPSBbXTtcbiAgICAgICAgZm9yICh2YXIgX2kgPSAxOyBfaSA8IGFyZ3VtZW50cy5sZW5ndGg7IF9pKyspIHtcbiAgICAgICAgICAgIGV4Y2VwdGlvbnNbX2kgLSAxXSA9IGFyZ3VtZW50c1tfaV07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHV0aWxzXzEuaXNFcXVhbC5hcHBseSh2b2lkIDAsIF9fc3ByZWFkQXJyYXkoW3RoaXMsIG9ial0sIGV4Y2VwdGlvbnMpKTtcbiAgICB9O1xuICAgIE1vZGVsLmNvbnN0cnVjdEZyb21PYmplY3QgPSBmdW5jdGlvbiAoc2VsZiwgb2JqKSB7XG4gICAgICAgIGZvciAodmFyIHByb3AgaW4gb2JqKVxuICAgICAgICAgICAgaWYgKG9iai5oYXNPd25Qcm9wZXJ0eShwcm9wKSAmJiBzZWxmLmhhc093blByb3BlcnR5KHByb3ApKVxuICAgICAgICAgICAgICAgIHNlbGZbcHJvcF0gPSBvYmpbcHJvcF07XG4gICAgICAgIHJldHVybiBzZWxmO1xuICAgIH07XG4gICAgcmV0dXJuIE1vZGVsO1xufSgpKTtcbmV4cG9ydHMuZGVmYXVsdCA9IE1vZGVsOyIsImltcG9ydCB7dmFsaWRhdGV9IGZyb20gXCIuLi92YWxpZGF0aW9uXCI7XG5pbXBvcnQgVmFsaWRhdGFibGUsIHtFcnJvcnN9IGZyb20gXCIuLi92YWxpZGF0aW9uL3R5cGVzXCI7XG5pbXBvcnQge2lzRXF1YWx9IGZyb20gXCIuLi91dGlsc1wiO1xuXG4vKipcbiAqIEFic3RyYWN0IGNsYXNzIHJlcHJlc2VudGluZyBhIFZhbGlkYXRhYmxlIE1vZGVsIG9iamVjdFxuICpcbiAqIE1vZGVsIG9iamVjdHMgbXVzdDpcbiAqICAtIEhhdmUgYWxsIHRoZWlyIHByb3BlcnRpZXMgZGVmaW5lZCBhcyBvcHRpb25hbDtcbiAqICAtIEhhdmUgYWxsIHRoZWlyIHByb3BlcnRpZXMgaW5pdGlhbGl6ZWQgKG9ubHkgdGhlICdAcmVxdWlyZWQoKScgZGVjb3JhdGVkIHByb3BlcnRpZXNcbiAqICA8c3Ryb25nPm5lZWQ8L3N0cm9uZz4gdG8gYmUgaW5pdGlhbGl6ZWQsIGJ1dCBhbGwgb2YgdGhlbSBzaG91bGQgYmUgYXMgZ29vZCBwcmFjdGljZSk7XG4gKlxuICogQGNsYXNzIE1vZGVsXG4gKiBAYWJzdHJhY3RcbiAqIEBpbXBsZW1lbnRzIFZhbGlkYXRhYmxlXG4gKiBAbmFtZXNwYWNlIE1vZGVsXG4gKiBAbWVtYmVyT2YgTW9kZWxcbiAqL1xuZXhwb3J0IGRlZmF1bHQgYWJzdHJhY3QgY2xhc3MgTW9kZWwgaW1wbGVtZW50cyBWYWxpZGF0YWJsZSB7XG4gICAgLyoqXG4gICAgICogQHBhcmFtIHtNb2RlbCB8IHt9fSBtb2RlbCBiYXNlIG9iamVjdCBmcm9tIHdoaWNoIHRvIHBvcHVsYXRlIHByb3BlcnRpZXMgZnJvbVxuICAgICAqIEBjb25zdHJ1Y3RvclxuICAgICAqIEBwcm90ZWN0ZWRcbiAgICAgKiBAc2VlIE1vZGVsI2NvbnN0cnVjdEZyb21PYmplY3RcbiAgICAgKi9cbiAgICBwcm90ZWN0ZWQgY29uc3RydWN0b3IobW9kZWw/OiBNb2RlbCB8IHt9KXtcbiAgICAgICAgTW9kZWwuY29uc3RydWN0RnJvbU9iamVjdCh0aGlzLCBtb2RlbCk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogVmFsaWRhdGVzIHRoZSBvYmplY3QgYWNjb3JkaW5nIHRvIGl0cyBkZWNvcmF0ZWQgcHJvcGVydGllc1xuICAgICAqXG4gICAgICogQHBhcmFtIHthbnl9IFthcmdzXVxuICAgICAqIEBtZW1iZXJPZiBNb2RlbFxuICAgICAqIEBzZWUgdmFsaWRhdGVcbiAgICAgKi9cbiAgICBwdWJsaWMgaGFzRXJyb3JzKC4uLmFyZ3M6IGFueVtdKTogRXJyb3Jze1xuICAgICAgICByZXR1cm4gdmFsaWRhdGUodGhpcyk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQ29tcGFyZSBvYmplY3QgZXF1YWxpdHkgcmVjdXJzaXZlbHlcbiAgICAgKiBAcGFyYW0ge2FueX0gb2JqIG9iamVjdCB0byBjb21wYXJlIHRvXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IFtleGNlcHRpb25zXSBwcm9wZXJ0eSBuYW1lcyB0byBiZSBleGNsdWRlZCBmcm9tIHRoZSBjb21wYXJpc29uXG4gICAgICogQG1lbWJlck9mIE1vZGVsXG4gICAgICovXG4gICAgcHVibGljIGVxdWFscyhvYmo6IGFueSwgLi4uZXhjZXB0aW9uczogc3RyaW5nW10pOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuIGlzRXF1YWwodGhpcywgb2JqLCAuLi5leGNlcHRpb25zKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiByZXBvcHVsYXRlcyB0aGUgT2JqZWN0IHByb3BlcnRpZXMgd2l0aCB0aGUgb25lcyBmcm9tIHRoZSBuZXcgb2JqZWN0XG4gICAgICpcbiAgICAgKiBAcGFyYW0ge1R9IHNlbGZcbiAgICAgKiBAcGFyYW0ge1R8IHt9fSBvYmpcbiAgICAgKiBAc3RhdGljXG4gICAgICogQGZ1bmN0aW9uIGNvbnN0cnVjdEZyb21PYmplY3RcbiAgICAgKiBAbWVtYmVyT2YgTW9kZWxcbiAgICAgKi9cbiAgICBwdWJsaWMgc3RhdGljIGNvbnN0cnVjdEZyb21PYmplY3Q8VCBleHRlbmRzIE1vZGVsPihzZWxmOiBULCBvYmo/OiBUIHwge30pe1xuICAgICAgICBmb3IgKGxldCBwcm9wIGluIG9iailcbiAgICAgICAgICAgIGlmKG9iai5oYXNPd25Qcm9wZXJ0eShwcm9wKSAmJiBzZWxmLmhhc093blByb3BlcnR5KHByb3ApKS8vIEB0cy1pZ25vcmVcbiAgICAgICAgICAgICAgICBzZWxmW3Byb3BdID0gb2JqW3Byb3BdO1xuICAgICAgICByZXR1cm4gc2VsZjtcbiAgICB9XG59Il19
