"use strict";var __spreadArray=this&&this.__spreadArray||function(r,t){for(var e=0,o=t.length,n=r.length;e<o;e++,n++)r[n]=t[e];return r};Object.defineProperty(exports,"__esModule",{value:!0});var validation_1=require("../validation"),utils_1=require("../utils"),Model=function(){function t(r){t.constructFromObject(this,r)}return t.prototype.hasErrors=function(){for(var r=[],t=0;t<arguments.length;t++)r[t]=arguments[t];return validation_1.validate(this)},t.prototype.equals=function(r){for(var t=[],e=1;e<arguments.length;e++)t[e-1]=arguments[e];return utils_1.isEqual.apply(void 0,__spreadArray([this,r],t))},t.constructFromObject=function(r,t){for(var e in t)t.hasOwnProperty(e)&&r.hasOwnProperty(e)&&(r[e]=t[e]);return r},t}();exports.default=Model;
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIk1vZGVsL01vZGVsLmpzIiwiTW9kZWwvTW9kZWwudHMiXSwibmFtZXMiOlsiX19zcHJlYWRBcnJheSIsInRoaXMiLCJ0byIsImZyb20iLCJpbCIsImxlbmd0aCIsImkiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsInZhbGlkYXRpb25fMSIsInJlcXVpcmUiLCJ1dGlsc18xIiwiTW9kZWwiLCJtb2RlbCIsImNvbnN0cnVjdEZyb21PYmplY3QiLCJwcm90b3R5cGUiLCJoYXNFcnJvcnMiLCJhcmdzIiwiX2kiLCJhcmd1bWVudHMiLCJ2YWxpZGF0ZSIsImVxdWFscyIsIm9iaiIsImV4Y2VwdGlvbnMiLCJpc0VxdWFsIiwiYXBwbHkiLCJzZWxmIiwicHJvcCIsImhhc093blByb3BlcnR5Il0sIm1hcHBpbmdzIjoiYUFDQSxJQUFJQSxjQUFpQkMsTUFBUUEsS0FBS0QsZUFBa0IsU0FBVUUsRUFBSUMsR0FBOURILElBQUFBLElBQUFBLEVBQWEsRUFBSUksRUFBQUQsRUFBUUUsT0FBS0wsRUFBQUEsRUFBQUEsT0FBa0JNLEVBQUFGLEVBQVVGLElBQUlDLElBQ3pERCxFQUFJSSxHQUFKSCxFQUFhRyxHQUVsQixPQUFPSixHQUNWSyxPQUpEQyxlQUFBQyxRQUFBLGFBQUEsQ0FBQUMsT0FBQSxJQ0RBLElBQUFDLGFBQUFDLFFBQUEsaUJBRUFDLFFBQUFELFFBQUEsWUFnQkFFLE1BQUEsV0FPSSxTQUFBQSxFQUFzQkMsR0FDbEJELEVBQU1FLG9CQUFvQmYsS0FBTWMsR0F1Q3hDLE9BN0JXRCxFQUFBRyxVQUFBQyxVQUFQLFdEckJJLElDcUJhLElBQUFDLEVBQUEsR0FBQUMsRUFBQSxFQUFBQSxFQUFBQyxVQUFBaEIsT0FBQWUsSUFBQUQsRUFBQUMsR0FBQUMsVUFBQUQsR0FDYixPQUFPVCxhQUFBVyxTQUFTckIsT0FTYmEsRUFBQUcsVUFBQU0sT0FBUCxTQUFjQyxHQVZHTCxJQVVPLElBQUFNLEVBQUEsR0FBQUwsRUFBQSxFQUFBQSxFQUFBQyxVQUFBaEIsT0FBQWUsSUFBQUssRUFBQUwsRUFBQSxHQUFBQyxVQUFBRCxHQUNwQixPQUFPUCxRQUFBYSxRQUFPQyxXQUFBLEVBQUEzQixjQUFBLENBQUNDLEtBQU11QixHQUFRQyxLQVluQlgsRUFBQUUsb0JBQWQsU0FBbURZLEVBQVNKLEdBQ3hELElBQUssSUFBSUssS0FBUUwsRUFDVkEsRUFBSU0sZUFBZUQsSUFBU0QsRUFBS0UsZUFBZUQsS0FDL0NELEVBQUtDLEdBQVFMLEVBQUlLLElBQ3pCLE9BQU9ELEdBRWZkLEVBL0NBLEdBNEI0QlcsUUFBQUEsUUFBQUwiLCJmaWxlIjoiTW9kZWwvTW9kZWwuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX3NwcmVhZEFycmF5ID0gKHRoaXMgJiYgdGhpcy5fX3NwcmVhZEFycmF5KSB8fCBmdW5jdGlvbiAodG8sIGZyb20pIHtcbiAgICBmb3IgKHZhciBpID0gMCwgaWwgPSBmcm9tLmxlbmd0aCwgaiA9IHRvLmxlbmd0aDsgaSA8IGlsOyBpKyssIGorKylcbiAgICAgICAgdG9bal0gPSBmcm9tW2ldO1xuICAgIHJldHVybiB0bztcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgdmFsaWRhdGlvbl8xID0gcmVxdWlyZShcIi4uL3ZhbGlkYXRpb25cIik7XG52YXIgdXRpbHNfMSA9IHJlcXVpcmUoXCIuLi91dGlsc1wiKTtcbnZhciBNb2RlbCA9IChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gTW9kZWwobW9kZWwpIHtcbiAgICAgICAgTW9kZWwuY29uc3RydWN0RnJvbU9iamVjdCh0aGlzLCBtb2RlbCk7XG4gICAgfVxuICAgIE1vZGVsLnByb3RvdHlwZS5oYXNFcnJvcnMgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBhcmdzID0gW107XG4gICAgICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBhcmd1bWVudHMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICAgICAgICBhcmdzW19pXSA9IGFyZ3VtZW50c1tfaV07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHZhbGlkYXRpb25fMS52YWxpZGF0ZSh0aGlzKTtcbiAgICB9O1xuICAgIE1vZGVsLnByb3RvdHlwZS5lcXVhbHMgPSBmdW5jdGlvbiAob2JqKSB7XG4gICAgICAgIHZhciBleGNlcHRpb25zID0gW107XG4gICAgICAgIGZvciAodmFyIF9pID0gMTsgX2kgPCBhcmd1bWVudHMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICAgICAgICBleGNlcHRpb25zW19pIC0gMV0gPSBhcmd1bWVudHNbX2ldO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB1dGlsc18xLmlzRXF1YWwuYXBwbHkodm9pZCAwLCBfX3NwcmVhZEFycmF5KFt0aGlzLCBvYmpdLCBleGNlcHRpb25zKSk7XG4gICAgfTtcbiAgICBNb2RlbC5jb25zdHJ1Y3RGcm9tT2JqZWN0ID0gZnVuY3Rpb24gKHNlbGYsIG9iaikge1xuICAgICAgICBmb3IgKHZhciBwcm9wIGluIG9iailcbiAgICAgICAgICAgIGlmIChvYmouaGFzT3duUHJvcGVydHkocHJvcCkgJiYgc2VsZi5oYXNPd25Qcm9wZXJ0eShwcm9wKSlcbiAgICAgICAgICAgICAgICBzZWxmW3Byb3BdID0gb2JqW3Byb3BdO1xuICAgICAgICByZXR1cm4gc2VsZjtcbiAgICB9O1xuICAgIHJldHVybiBNb2RlbDtcbn0oKSk7XG5leHBvcnRzLmRlZmF1bHQgPSBNb2RlbDsiLCJpbXBvcnQge3ZhbGlkYXRlfSBmcm9tIFwiLi4vdmFsaWRhdGlvblwiO1xuaW1wb3J0IFZhbGlkYXRhYmxlLCB7RXJyb3JzfSBmcm9tIFwiLi4vdmFsaWRhdGlvbi90eXBlc1wiO1xuaW1wb3J0IHtpc0VxdWFsfSBmcm9tIFwiLi4vdXRpbHNcIjtcblxuLyoqXG4gKiBBYnN0cmFjdCBjbGFzcyByZXByZXNlbnRpbmcgYSBWYWxpZGF0YWJsZSBNb2RlbCBvYmplY3RcbiAqXG4gKiBNb2RlbCBvYmplY3RzIG11c3Q6XG4gKiAgLSBIYXZlIGFsbCB0aGVpciBwcm9wZXJ0aWVzIGRlZmluZWQgYXMgb3B0aW9uYWw7XG4gKiAgLSBIYXZlIGFsbCB0aGVpciBwcm9wZXJ0aWVzIGluaXRpYWxpemVkIChvbmx5IHRoZSAnQHJlcXVpcmVkKCknIGRlY29yYXRlZCBwcm9wZXJ0aWVzXG4gKiAgPHN0cm9uZz5uZWVkPC9zdHJvbmc+IHRvIGJlIGluaXRpYWxpemVkLCBidXQgYWxsIG9mIHRoZW0gc2hvdWxkIGJlIGFzIGdvb2QgcHJhY3RpY2UpO1xuICpcbiAqIEBjbGFzcyBNb2RlbFxuICogQGFic3RyYWN0XG4gKiBAaW1wbGVtZW50cyBWYWxpZGF0YWJsZVxuICogQG5hbWVzcGFjZSBNb2RlbFxuICogQG1lbWJlck9mIE1vZGVsXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGFic3RyYWN0IGNsYXNzIE1vZGVsIGltcGxlbWVudHMgVmFsaWRhdGFibGUge1xuICAgIC8qKlxuICAgICAqIEBwYXJhbSB7TW9kZWwgfCB7fX0gbW9kZWwgYmFzZSBvYmplY3QgZnJvbSB3aGljaCB0byBwb3B1bGF0ZSBwcm9wZXJ0aWVzIGZyb21cbiAgICAgKiBAY29uc3RydWN0b3JcbiAgICAgKiBAcHJvdGVjdGVkXG4gICAgICogQHNlZSBNb2RlbCNjb25zdHJ1Y3RGcm9tT2JqZWN0XG4gICAgICovXG4gICAgcHJvdGVjdGVkIGNvbnN0cnVjdG9yKG1vZGVsPzogTW9kZWwgfCB7fSl7XG4gICAgICAgIE1vZGVsLmNvbnN0cnVjdEZyb21PYmplY3QodGhpcywgbW9kZWwpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFZhbGlkYXRlcyB0aGUgb2JqZWN0IGFjY29yZGluZyB0byBpdHMgZGVjb3JhdGVkIHByb3BlcnRpZXNcbiAgICAgKlxuICAgICAqIEBwYXJhbSB7YW55fSBbYXJnc11cbiAgICAgKiBAbWVtYmVyT2YgTW9kZWxcbiAgICAgKiBAc2VlIHZhbGlkYXRlXG4gICAgICovXG4gICAgcHVibGljIGhhc0Vycm9ycyguLi5hcmdzOiBhbnlbXSk6IEVycm9yc3tcbiAgICAgICAgcmV0dXJuIHZhbGlkYXRlKHRoaXMpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIENvbXBhcmUgb2JqZWN0IGVxdWFsaXR5IHJlY3Vyc2l2ZWx5XG4gICAgICogQHBhcmFtIHthbnl9IG9iaiBvYmplY3QgdG8gY29tcGFyZSB0b1xuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBbZXhjZXB0aW9uc10gcHJvcGVydHkgbmFtZXMgdG8gYmUgZXhjbHVkZWQgZnJvbSB0aGUgY29tcGFyaXNvblxuICAgICAqIEBtZW1iZXJPZiBNb2RlbFxuICAgICAqL1xuICAgIHB1YmxpYyBlcXVhbHMob2JqOiBhbnksIC4uLmV4Y2VwdGlvbnM6IHN0cmluZ1tdKTogYm9vbGVhbiB7XG4gICAgICAgIHJldHVybiBpc0VxdWFsKHRoaXMsIG9iaiwgLi4uZXhjZXB0aW9ucyk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogcmVwb3B1bGF0ZXMgdGhlIE9iamVjdCBwcm9wZXJ0aWVzIHdpdGggdGhlIG9uZXMgZnJvbSB0aGUgbmV3IG9iamVjdFxuICAgICAqXG4gICAgICogQHBhcmFtIHtUfSBzZWxmXG4gICAgICogQHBhcmFtIHtUfCB7fX0gb2JqXG4gICAgICogQHN0YXRpY1xuICAgICAqIEBmdW5jdGlvbiBjb25zdHJ1Y3RGcm9tT2JqZWN0XG4gICAgICogQG1lbWJlck9mIE1vZGVsXG4gICAgICovXG4gICAgcHVibGljIHN0YXRpYyBjb25zdHJ1Y3RGcm9tT2JqZWN0PFQgZXh0ZW5kcyBNb2RlbD4oc2VsZjogVCwgb2JqPzogVCB8IHt9KXtcbiAgICAgICAgZm9yIChsZXQgcHJvcCBpbiBvYmopXG4gICAgICAgICAgICBpZihvYmouaGFzT3duUHJvcGVydHkocHJvcCkgJiYgc2VsZi5oYXNPd25Qcm9wZXJ0eShwcm9wKSkvLyBAdHMtaWdub3JlXG4gICAgICAgICAgICAgICAgc2VsZltwcm9wXSA9IG9ialtwcm9wXTtcbiAgICAgICAgcmV0dXJuIHNlbGY7XG4gICAgfVxufSJdfQ==
