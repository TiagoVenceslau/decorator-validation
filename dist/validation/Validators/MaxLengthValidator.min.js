"use strict";var __extends=this&&this.__extends||function(){var r=function(t,e){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o])})(t,e)};return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function o(){this.constructor=t}r(t,e),t.prototype=null===e?Object.create(e):(o.prototype=e.prototype,new o)}}(),__importDefault=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(exports,"__esModule",{value:!0});var Validator_1=__importDefault(require("./Validator")),constants_1=require("../constants"),MaxLengthValidator=function(e){function t(t){return void 0===t&&(t=constants_1.DEFAULT_ERROR_MESSAGES.MAX_LENGTH),e.call(this,constants_1.ValidationKeys.MAX_LENGTH,t)||this}return __extends(t,e),t.prototype.hasErrors=function(t,e,o){if(void 0!==t)return t.length>e?this.getMessage(o||this.message,e):void 0},t}(Validator_1.default);exports.default=MaxLengthValidator;
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZhbGlkYXRpb24vVmFsaWRhdG9ycy9NYXhMZW5ndGhWYWxpZGF0b3IuanMiLCJ2YWxpZGF0aW9uL1ZhbGlkYXRvcnMvTWF4TGVuZ3RoVmFsaWRhdG9yLnRzIl0sIm5hbWVzIjpbIl9fZXh0ZW5kcyIsInRoaXMiLCJleHRlbmRTdGF0aWNzIiwiT2JqZWN0Iiwic2V0UHJvdG90eXBlT2YiLCJBcnJheSIsImQiLCJiIiwiX19wcm90b19fIiwicCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsIlR5cGVFcnJvciIsIlN0cmluZyIsImNvbnN0cnVjdG9yIiwiY3JlYXRlIiwiX18iLCJfX2ltcG9ydERlZmF1bHQiLCJtb2QiLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiVmFsaWRhdG9yXzEiLCJyZXF1aXJlIiwiY29uc3RhbnRzXzEiLCJNYXhMZW5ndGhWYWxpZGF0b3IiLCJfc3VwZXIiLCJtZXNzYWdlIiwiREVGQVVMVF9FUlJPUl9NRVNTQUdFUyIsIk1BWF9MRU5HVEgiLCJWYWxpZGF0aW9uS2V5cyIsImhhc0Vycm9ycyIsIm1heGxlbmd0aCIsInVuZGVmaW5lZCIsImxlbmd0aCIsImdldE1lc3NhZ2UiXSwibWFwcGluZ3MiOiJhQUNBLElBQUlBLFVBQWFDLE1BQVFBLEtBQUtELFdBQWUsV0FBekNBLElBQUFBLEVBQXFCLFNBQUtBLEVBQUFBLEdBR2pCLE9BRkxFLEVBQWdCQyxPQUFBQyxnQkFDaEJGLENBQUFBLFVBQXNCLGNBQU5HLE9BQ1gsU0FBQUMsRUFBQUMsR0FBQUQsRUFBQUUsVUFBQUQsSUFBRUMsU0FBV0YsRUFBQUMsR0FBQSxJQUFBLElBQUFFLEtBQUFGLEVBQUFKLE9BQUFPLFVBQUFDLGVBQUFDLEtBQUFMLEVBQUFFLEtBQUFILEVBQUFHLEdBQUFGLEVBQUFFLE1BQXlCSCxFQUFBQyxJQUFvQyxPQUMzRSxTQUFBRCxFQUFBQyxHQUFrQixHQUFpQixtQkFBakJBLEdBQXNDSSxPQUFWRCxFQUZsRCxNQUFBLElBQUFHLFVBQUEsdUJBQUFDLE9BQUFQLEdBQUEsaUNBR0EsU0FBT0wsSUFBYUQsS0FBQWMsWUFBcEJULEVBS0FKLEVBQWNJLEVBQUdDLEdBVHJCRCxFQUFBSSxVQUFBLE9BQUFILEVBQUFKLE9BQUFhLE9BQUFULElBQUFVLEVBQUFQLFVBQUFILEVBQUFHLFVBQUEsSUFBQU8sSUFEeUMsR0FRckNDLGdCQUFpQmpCLE1BQWJBLEtBQTRCaUIsaUJBQ3RCLFNBQUFDLEdBQ1ZqQixPQUFBQSxHQUFhaUIsRUFBYkMsV0FBQUQsRUFBQSxDQUFBRSxRQUFBRixJQUNBaEIsT0FBQW1CLGVBQWNDLFFBQUEsYUFBQSxDQUFBQyxPQUFBLElDWHRCLElBQUFDLFlBQUFQLGdCQUFBUSxRQUFBLGdCQUNBQyxZQUFBRCxRQUFBLGdCQVNBRSxtQkFBQSxTQUFBQyxHQUNJLFNBQUFELEVBQVlFLEdEY1IsWUNkUSxJQUFBQSxJQUFBQSxFQUFrQkgsWUFBQUksdUJBQXVCQyxZQUNqREgsRUFBQWpCLEtBQUFYLEtBQU0wQixZQUFBTSxlQUFlRCxXQUFZRixJQUFRN0IsS0FRakQsT0FWZ0RELFVBQUE0QixFQUFBQyxHQUs1Q0QsRUFBQWxCLFVBQUF3QixVQUFBLFNBQVVWLEVBQWVXLEVBQW1CTCxHQUN4QyxRQUFjTSxJQUFWWixFQUVKLE9BQU9BLEVBQU1hLE9BQVNGLEVBQVlsQyxLQUFLcUMsV0FBV1IsR0FBVzdCLEtBQUs2QixRQUFTSyxRQUFhQyxHQUVoR1IsRUFWQSxDQUFnREgsWUFBQUosU0RRSEUsUUFBN0NGLFFBQUFPIiwiZmlsZSI6InZhbGlkYXRpb24vVmFsaWRhdG9ycy9NYXhMZW5ndGhWYWxpZGF0b3IubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19leHRlbmRzID0gKHRoaXMgJiYgdGhpcy5fX2V4dGVuZHMpIHx8IChmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGV4dGVuZFN0YXRpY3MgPSBmdW5jdGlvbiAoZCwgYikge1xuICAgICAgICBleHRlbmRTdGF0aWNzID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8XG4gICAgICAgICAgICAoeyBfX3Byb3RvX186IFtdIH0gaW5zdGFuY2VvZiBBcnJheSAmJiBmdW5jdGlvbiAoZCwgYikgeyBkLl9fcHJvdG9fXyA9IGI7IH0pIHx8XG4gICAgICAgICAgICBmdW5jdGlvbiAoZCwgYikgeyBmb3IgKHZhciBwIGluIGIpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoYiwgcCkpIGRbcF0gPSBiW3BdOyB9O1xuICAgICAgICByZXR1cm4gZXh0ZW5kU3RhdGljcyhkLCBiKTtcbiAgICB9O1xuICAgIHJldHVybiBmdW5jdGlvbiAoZCwgYikge1xuICAgICAgICBpZiAodHlwZW9mIGIgIT09IFwiZnVuY3Rpb25cIiAmJiBiICE9PSBudWxsKVxuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNsYXNzIGV4dGVuZHMgdmFsdWUgXCIgKyBTdHJpbmcoYikgKyBcIiBpcyBub3QgYSBjb25zdHJ1Y3RvciBvciBudWxsXCIpO1xuICAgICAgICBleHRlbmRTdGF0aWNzKGQsIGIpO1xuICAgICAgICBmdW5jdGlvbiBfXygpIHsgdGhpcy5jb25zdHJ1Y3RvciA9IGQ7IH1cbiAgICAgICAgZC5wcm90b3R5cGUgPSBiID09PSBudWxsID8gT2JqZWN0LmNyZWF0ZShiKSA6IChfXy5wcm90b3R5cGUgPSBiLnByb3RvdHlwZSwgbmV3IF9fKCkpO1xuICAgIH07XG59KSgpO1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIFZhbGlkYXRvcl8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuL1ZhbGlkYXRvclwiKSk7XG52YXIgY29uc3RhbnRzXzEgPSByZXF1aXJlKFwiLi4vY29uc3RhbnRzXCIpO1xudmFyIE1heExlbmd0aFZhbGlkYXRvciA9IChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgX19leHRlbmRzKE1heExlbmd0aFZhbGlkYXRvciwgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBNYXhMZW5ndGhWYWxpZGF0b3IobWVzc2FnZSkge1xuICAgICAgICBpZiAobWVzc2FnZSA9PT0gdm9pZCAwKSB7IG1lc3NhZ2UgPSBjb25zdGFudHNfMS5ERUZBVUxUX0VSUk9SX01FU1NBR0VTLk1BWF9MRU5HVEg7IH1cbiAgICAgICAgcmV0dXJuIF9zdXBlci5jYWxsKHRoaXMsIGNvbnN0YW50c18xLlZhbGlkYXRpb25LZXlzLk1BWF9MRU5HVEgsIG1lc3NhZ2UpIHx8IHRoaXM7XG4gICAgfVxuICAgIE1heExlbmd0aFZhbGlkYXRvci5wcm90b3R5cGUuaGFzRXJyb3JzID0gZnVuY3Rpb24gKHZhbHVlLCBtYXhsZW5ndGgsIG1lc3NhZ2UpIHtcbiAgICAgICAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIHJldHVybiB2YWx1ZS5sZW5ndGggPiBtYXhsZW5ndGggPyB0aGlzLmdldE1lc3NhZ2UobWVzc2FnZSB8fCB0aGlzLm1lc3NhZ2UsIG1heGxlbmd0aCkgOiB1bmRlZmluZWQ7XG4gICAgfTtcbiAgICByZXR1cm4gTWF4TGVuZ3RoVmFsaWRhdG9yO1xufShWYWxpZGF0b3JfMS5kZWZhdWx0KSk7XG5leHBvcnRzLmRlZmF1bHQgPSBNYXhMZW5ndGhWYWxpZGF0b3I7IiwiaW1wb3J0IHtFcnJvcnN9IGZyb20gXCIuLi90eXBlc1wiO1xuaW1wb3J0IFZhbGlkYXRvciBmcm9tIFwiLi9WYWxpZGF0b3JcIjtcbmltcG9ydCB7VmFsaWRhdGlvbktleXMsIERFRkFVTFRfRVJST1JfTUVTU0FHRVN9IGZyb20gXCIuLi9jb25zdGFudHNcIjtcblxuLyoqXG4gKiBNYXggTGVuZ3RoIFZhbGlkYXRvclxuICpcbiAqIEBjbGFzcyBNYXhMZW5ndGhWYWxpZGF0b3JcbiAqIEBleHRlbmRzIFZhbGlkYXRvclxuICogQG1lbWJlck9mIFZhbGlkYXRvcnNcbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTWF4TGVuZ3RoVmFsaWRhdG9yIGV4dGVuZHMgVmFsaWRhdG9yIHtcbiAgICBjb25zdHJ1Y3RvcihtZXNzYWdlOiBzdHJpbmcgPSBERUZBVUxUX0VSUk9SX01FU1NBR0VTLk1BWF9MRU5HVEgpe1xuICAgICAgICBzdXBlcihWYWxpZGF0aW9uS2V5cy5NQVhfTEVOR1RILCBtZXNzYWdlKVxuICAgIH1cblxuICAgIGhhc0Vycm9ycyh2YWx1ZTogc3RyaW5nLCBtYXhsZW5ndGg6IG51bWJlciwgbWVzc2FnZT86IHN0cmluZyk6IEVycm9ycyB7XG4gICAgICAgIGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICByZXR1cm4gdmFsdWUubGVuZ3RoID4gbWF4bGVuZ3RoID8gdGhpcy5nZXRNZXNzYWdlKG1lc3NhZ2UgfHwgdGhpcy5tZXNzYWdlLCBtYXhsZW5ndGgpIDogdW5kZWZpbmVkO1xuICAgIH1cbn0iXX0=
