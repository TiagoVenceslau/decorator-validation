"use strict";var __extends=this&&this.__extends||function(){var n=function(t,e){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r])})(t,e)};return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function r(){this.constructor=t}n(t,e),t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}}(),__importDefault=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(exports,"__esModule",{value:!0});var Validator_1=__importDefault(require("./Validator")),constants_1=require("../constants"),PatternValidator=function(r){function e(t,e){return void 0===t&&(t=constants_1.ValidationKeys.PATTERN),void 0===e&&(e=constants_1.DEFAULT_ERROR_MESSAGES.PATTERN),r.call(this,t,e)||this}return __extends(e,r),e.prototype.getPattern=function(t){if(!e.regexpParser.test(t))return new RegExp(t);t=t.match(e.regexpParser);return new RegExp(t[1],t[2])},e.prototype.hasErrors=function(t,e,r){if(t)return(e="string"==typeof e?this.getPattern(e):e).test(t)?void 0:this.getMessage(r||this.message)},e.regexpParser=new RegExp("^/(.+)/([gimus]*)$"),e}(Validator_1.default);exports.default=PatternValidator;
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZhbGlkYXRpb24vVmFsaWRhdG9ycy9QYXR0ZXJuVmFsaWRhdG9yLmpzIiwidmFsaWRhdGlvbi9WYWxpZGF0b3JzL1BhdHRlcm5WYWxpZGF0b3IudHMiXSwibmFtZXMiOlsiX19leHRlbmRzIiwidGhpcyIsImV4dGVuZFN0YXRpY3MiLCJPYmplY3QiLCJzZXRQcm90b3R5cGVPZiIsIkFycmF5IiwiZCIsImIiLCJfX3Byb3RvX18iLCJwIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiVHlwZUVycm9yIiwiU3RyaW5nIiwiY29uc3RydWN0b3IiLCJjcmVhdGUiLCJfXyIsIl9faW1wb3J0RGVmYXVsdCIsIm1vZCIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJWYWxpZGF0b3JfMSIsInJlcXVpcmUiLCJjb25zdGFudHNfMSIsIlBhdHRlcm5WYWxpZGF0b3IiLCJfc3VwZXIiLCJrZXkiLCJtZXNzYWdlIiwiVmFsaWRhdGlvbktleXMiLCJQQVRURVJOIiwiREVGQVVMVF9FUlJPUl9NRVNTQUdFUyIsImdldFBhdHRlcm4iLCJwYXR0ZXJuIiwicmVnZXhwUGFyc2VyIiwidGVzdCIsIlJlZ0V4cCIsIm1hdGNoIiwiaGFzRXJyb3JzIiwidW5kZWZpbmVkIiwiZ2V0TWVzc2FnZSJdLCJtYXBwaW5ncyI6ImFBQ0EsSUFBSUEsVUFBYUMsTUFBUUEsS0FBS0QsV0FBZSxXQUF6Q0EsSUFBQUEsRUFBcUIsU0FBS0EsRUFBQUEsR0FHakIsT0FGTEUsRUFBZ0JDLE9BQUFDLGdCQUNoQkYsQ0FBQUEsVUFBc0IsY0FBTkcsT0FDWCxTQUFBQyxFQUFBQyxHQUFBRCxFQUFBRSxVQUFBRCxJQUFFQyxTQUFXRixFQUFBQyxHQUFBLElBQUEsSUFBQUUsS0FBQUYsRUFBQUosT0FBQU8sVUFBQUMsZUFBQUMsS0FBQUwsRUFBQUUsS0FBQUgsRUFBQUcsR0FBQUYsRUFBQUUsTUFBeUJILEVBQUFDLElBQW9DLE9BQzNFLFNBQUFELEVBQUFDLEdBQWtCLEdBQWlCLG1CQUFqQkEsR0FBc0NJLE9BQVZELEVBRmxELE1BQUEsSUFBQUcsVUFBQSx1QkFBQUMsT0FBQVAsR0FBQSxpQ0FHQSxTQUFPTCxJQUFhRCxLQUFBYyxZQUFwQlQsRUFLQUosRUFBY0ksRUFBR0MsR0FUckJELEVBQUFJLFVBQUEsT0FBQUgsRUFBQUosT0FBQWEsT0FBQVQsSUFBQVUsRUFBQVAsVUFBQUgsRUFBQUcsVUFBQSxJQUFBTyxJQUR5QyxHQVFyQ0MsZ0JBQWlCakIsTUFBYkEsS0FBNEJpQixpQkFDdEIsU0FBQUMsR0FDVmpCLE9BQUFBLEdBQWFpQixFQUFiQyxXQUFBRCxFQUFBLENBQUFFLFFBQUFGLElBQ0FoQixPQUFBbUIsZUFBY0MsUUFBQSxhQUFBLENBQUFDLE9BQUEsSUNadEIsSUFBQUMsWUFBQVAsZ0JBQUFRLFFBQUEsZ0JBQ0FDLFlBQUFELFFBQUEsZ0JBVUFFLGlCQUFBLFNBQUFDLEdBR0ksU0FBQUQsRUFBWUUsRUFBc0NDLEdERWxEYixZQ0ZZLElBQUFZLElBQUFBLEVBQWNILFlBQUFLLGVBQWVDLGNBQVMsSUFBQUYsSUFBQUEsRUFBa0JKLFlBQUFPLHVCQUF1QkQsU0FDdkZKLEVBQUFqQixLQUFBWCxLQUFNNkIsRUFBS0MsSUFBUTlCLEtBZ0IzQixPQXBCOENELFVBQUE0QixFQUFBQyxHQU9sQ0QsRUFBQWxCLFVBQUF5QixXQUFSLFNBQW1CQyxHQUNmLElBQUtSLEVBQWlCUyxhQUFhQyxLQUFLRixHQUNwQyxPQUFPLElBQUlHLE9BQU9ILEdBQ2hCSSxFQUFhSixFQUFRSSxNQUFNWixFQUFpQlMsY0FDbEQsT0FBTyxJQUFJRSxPQUFPQyxFQUFNLEdBQUlBLEVBQU0sS0FHdENaLEVBQUFsQixVQUFBK0IsVUFBQSxTQUFVakIsRUFBZVksRUFBMEJMLEdBQy9DLEdBQUtQLEVBR0wsT0FEQVksRUFBNkIsaUJBQVpBLEVBQXVCbkMsS0FBS2tDLFdBQVdDLEdBQVdBLEdBQ25ERSxLQUFLZCxRQUFvRGtCLEVBQTNDekMsS0FBSzBDLFdBQVdaLEdBQVc5QixLQUFLOEIsVUFqQjFDSCxFQUFBUyxhQUF1QixJQUFJRSxPQUFPLHNCQW1COURYLEVBcEJBLENBQThDSCxZQUFBSixTQUcxQ0UsUUFBQUYsUUFIaUJPIiwiZmlsZSI6InZhbGlkYXRpb24vVmFsaWRhdG9ycy9QYXR0ZXJuVmFsaWRhdG9yLm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fZXh0ZW5kcyA9ICh0aGlzICYmIHRoaXMuX19leHRlbmRzKSB8fCAoZnVuY3Rpb24gKCkge1xuICAgIHZhciBleHRlbmRTdGF0aWNzID0gZnVuY3Rpb24gKGQsIGIpIHtcbiAgICAgICAgZXh0ZW5kU3RhdGljcyA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fFxuICAgICAgICAgICAgKHsgX19wcm90b19fOiBbXSB9IGluc3RhbmNlb2YgQXJyYXkgJiYgZnVuY3Rpb24gKGQsIGIpIHsgZC5fX3Byb3RvX18gPSBiOyB9KSB8fFxuICAgICAgICAgICAgZnVuY3Rpb24gKGQsIGIpIHsgZm9yICh2YXIgcCBpbiBiKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGIsIHApKSBkW3BdID0gYltwXTsgfTtcbiAgICAgICAgcmV0dXJuIGV4dGVuZFN0YXRpY3MoZCwgYik7XG4gICAgfTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKGQsIGIpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBiICE9PSBcImZ1bmN0aW9uXCIgJiYgYiAhPT0gbnVsbClcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDbGFzcyBleHRlbmRzIHZhbHVlIFwiICsgU3RyaW5nKGIpICsgXCIgaXMgbm90IGEgY29uc3RydWN0b3Igb3IgbnVsbFwiKTtcbiAgICAgICAgZXh0ZW5kU3RhdGljcyhkLCBiKTtcbiAgICAgICAgZnVuY3Rpb24gX18oKSB7IHRoaXMuY29uc3RydWN0b3IgPSBkOyB9XG4gICAgICAgIGQucHJvdG90eXBlID0gYiA9PT0gbnVsbCA/IE9iamVjdC5jcmVhdGUoYikgOiAoX18ucHJvdG90eXBlID0gYi5wcm90b3R5cGUsIG5ldyBfXygpKTtcbiAgICB9O1xufSkoKTtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciBWYWxpZGF0b3JfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi9WYWxpZGF0b3JcIikpO1xudmFyIGNvbnN0YW50c18xID0gcmVxdWlyZShcIi4uL2NvbnN0YW50c1wiKTtcbnZhciBQYXR0ZXJuVmFsaWRhdG9yID0gKGZ1bmN0aW9uIChfc3VwZXIpIHtcbiAgICBfX2V4dGVuZHMoUGF0dGVyblZhbGlkYXRvciwgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBQYXR0ZXJuVmFsaWRhdG9yKGtleSwgbWVzc2FnZSkge1xuICAgICAgICBpZiAoa2V5ID09PSB2b2lkIDApIHsga2V5ID0gY29uc3RhbnRzXzEuVmFsaWRhdGlvbktleXMuUEFUVEVSTjsgfVxuICAgICAgICBpZiAobWVzc2FnZSA9PT0gdm9pZCAwKSB7IG1lc3NhZ2UgPSBjb25zdGFudHNfMS5ERUZBVUxUX0VSUk9SX01FU1NBR0VTLlBBVFRFUk47IH1cbiAgICAgICAgcmV0dXJuIF9zdXBlci5jYWxsKHRoaXMsIGtleSwgbWVzc2FnZSkgfHwgdGhpcztcbiAgICB9XG4gICAgUGF0dGVyblZhbGlkYXRvci5wcm90b3R5cGUuZ2V0UGF0dGVybiA9IGZ1bmN0aW9uIChwYXR0ZXJuKSB7XG4gICAgICAgIGlmICghUGF0dGVyblZhbGlkYXRvci5yZWdleHBQYXJzZXIudGVzdChwYXR0ZXJuKSlcbiAgICAgICAgICAgIHJldHVybiBuZXcgUmVnRXhwKHBhdHRlcm4pO1xuICAgICAgICB2YXIgbWF0Y2ggPSBwYXR0ZXJuLm1hdGNoKFBhdHRlcm5WYWxpZGF0b3IucmVnZXhwUGFyc2VyKTtcbiAgICAgICAgcmV0dXJuIG5ldyBSZWdFeHAobWF0Y2hbMV0sIG1hdGNoWzJdKTtcbiAgICB9O1xuICAgIFBhdHRlcm5WYWxpZGF0b3IucHJvdG90eXBlLmhhc0Vycm9ycyA9IGZ1bmN0aW9uICh2YWx1ZSwgcGF0dGVybiwgbWVzc2FnZSkge1xuICAgICAgICBpZiAoIXZhbHVlKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICBwYXR0ZXJuID0gdHlwZW9mIHBhdHRlcm4gPT09ICdzdHJpbmcnID8gdGhpcy5nZXRQYXR0ZXJuKHBhdHRlcm4pIDogcGF0dGVybjtcbiAgICAgICAgcmV0dXJuICFwYXR0ZXJuLnRlc3QodmFsdWUpID8gdGhpcy5nZXRNZXNzYWdlKG1lc3NhZ2UgfHwgdGhpcy5tZXNzYWdlKSA6IHVuZGVmaW5lZDtcbiAgICB9O1xuICAgIFBhdHRlcm5WYWxpZGF0b3IucmVnZXhwUGFyc2VyID0gbmV3IFJlZ0V4cChcIl5cXC8oLispXFwvKFtnaW11c10qKSRcIik7XG4gICAgcmV0dXJuIFBhdHRlcm5WYWxpZGF0b3I7XG59KFZhbGlkYXRvcl8xLmRlZmF1bHQpKTtcbmV4cG9ydHMuZGVmYXVsdCA9IFBhdHRlcm5WYWxpZGF0b3I7IiwiaW1wb3J0IFZhbGlkYXRvciBmcm9tIFwiLi9WYWxpZGF0b3JcIjtcbmltcG9ydCB7VmFsaWRhdGlvbktleXMsIERFRkFVTFRfRVJST1JfTUVTU0FHRVN9IGZyb20gXCIuLi9jb25zdGFudHNcIjtcbmltcG9ydCB7RXJyb3JzfSBmcm9tIFwiLi4vdHlwZXNcIjtcblxuLyoqXG4gKiBQYXR0ZXJuIFZhbGlkYXRvclxuICpcbiAqIEBjbGFzcyBQYXR0ZXJuVmFsaWRhdG9yXG4gKiBAZXh0ZW5kcyBWYWxpZGF0b3JcbiAqIEBtZW1iZXJPZiBWYWxpZGF0b3JzXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBhdHRlcm5WYWxpZGF0b3IgZXh0ZW5kcyBWYWxpZGF0b3Ige1xuICAgIHByaXZhdGUgc3RhdGljIHJlYWRvbmx5IHJlZ2V4cFBhcnNlcjogUmVnRXhwID0gbmV3IFJlZ0V4cChcIl5cXC8oLispXFwvKFtnaW11c10qKSRcIik7XG5cbiAgICBjb25zdHJ1Y3RvcihrZXk6IHN0cmluZyA9IFZhbGlkYXRpb25LZXlzLlBBVFRFUk4sIG1lc3NhZ2U6IHN0cmluZyA9IERFRkFVTFRfRVJST1JfTUVTU0FHRVMuUEFUVEVSTil7XG4gICAgICAgIHN1cGVyKGtleSwgbWVzc2FnZSk7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBnZXRQYXR0ZXJuKHBhdHRlcm46IHN0cmluZyk6IFJlZ0V4cCB7XG4gICAgICAgIGlmICghUGF0dGVyblZhbGlkYXRvci5yZWdleHBQYXJzZXIudGVzdChwYXR0ZXJuKSlcbiAgICAgICAgICAgIHJldHVybiBuZXcgUmVnRXhwKHBhdHRlcm4pO1xuICAgICAgICBjb25zdCBtYXRjaDogYW55ID0gcGF0dGVybi5tYXRjaChQYXR0ZXJuVmFsaWRhdG9yLnJlZ2V4cFBhcnNlcik7XG4gICAgICAgIHJldHVybiBuZXcgUmVnRXhwKG1hdGNoWzFdLCBtYXRjaFsyXSk7XG4gICAgfVxuXG4gICAgaGFzRXJyb3JzKHZhbHVlOiBzdHJpbmcsIHBhdHRlcm46IFJlZ0V4cCB8IHN0cmluZywgbWVzc2FnZT86IHN0cmluZyk6IEVycm9ycyB7XG4gICAgICAgIGlmICghdmFsdWUpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIHBhdHRlcm4gPSB0eXBlb2YgcGF0dGVybiA9PT0gJ3N0cmluZycgPyB0aGlzLmdldFBhdHRlcm4ocGF0dGVybikgOiBwYXR0ZXJuO1xuICAgICAgICByZXR1cm4gIXBhdHRlcm4udGVzdCh2YWx1ZSkgPyB0aGlzLmdldE1lc3NhZ2UobWVzc2FnZSB8fCB0aGlzLm1lc3NhZ2UpIDogdW5kZWZpbmVkO1xuICAgIH1cbn0iXX0=
