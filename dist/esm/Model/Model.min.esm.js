"use strict";var __spreadArray=function(r,t){for(var e=0,o=t.length,n=r.length;e<o;e++,n++)r[n]=t[e];return r};Object.defineProperty(exports,"__esModule",{value:!0});var validation_1=require("../validation"),utils_1=require("../utils"),Model=function(){function t(r){t.constructFromObject(this,r)}return t.prototype.hasErrors=function(){for(var r=[],t=0;t<arguments.length;t++)r[t]=arguments[t];return validation_1.validate(this)},t.prototype.equals=function(r){for(var t=[],e=1;e<arguments.length;e++)t[e-1]=arguments[e];return utils_1.isEqual.apply(void 0,__spreadArray([this,r],t))},t.constructFromObject=function(r,t){for(var e in t)t.hasOwnProperty(e)&&r.hasOwnProperty(e)&&(r[e]=t[e]);return r},t}();exports.default=Model;
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIk1vZGVsL01vZGVsLmpzIiwiTW9kZWwvTW9kZWwudHMiXSwibmFtZXMiOlsiX19zcHJlYWRBcnJheSIsInRvIiwiZnJvbSIsImlsIiwibGVuZ3RoIiwiaiIsImkiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsInZhbGlkYXRpb25fMSIsInJlcXVpcmUiLCJ1dGlsc18xIiwiTW9kZWwiLCJtb2RlbCIsImNvbnN0cnVjdEZyb21PYmplY3QiLCJ0aGlzIiwicHJvdG90eXBlIiwiaGFzRXJyb3JzIiwiYXJncyIsIl9pIiwiYXJndW1lbnRzIiwidmFsaWRhdGUiLCJlcXVhbHMiLCJvYmoiLCJleGNlcHRpb25zIiwiaXNFcXVhbCIsImFwcGx5Iiwic2VsZiIsInByb3AiLCJoYXNPd25Qcm9wZXJ0eSIsImRlZmF1bHQiXSwibWFwcGluZ3MiOiJhQUNBLElBQUlBLGNBQWdELFNBQVVDLEVBQUlDLEdBQTlERixJQUFBQSxJQUFBQSxFQUFhLEVBQUlHLEVBQUFELEVBQVFFLE9BQUFDLEVBQUtMLEVBQUFBLE9BQWRNLEVBQWdDSCxFQUFBRyxJQUFVTCxJQUNyREEsRUFBSUssR0FBSkosRUFBYUksR0FDZEwsT0FBQUEsR0FHUk0sT0FBT0MsZUFBZUMsUUFBUyxhQUFjLENBQUVDLE9BQU8sSUNOdEQsSUFBQUMsYUFBQUMsUUFBQSxpQkFFQUMsUUFBQUQsUUFBQSxZQWdCQUUsTUFBQSxXQU9JLFNBQUFBLEVBQXNCQyxHQUNsQkQsRUFBTUUsb0JBQW9CQyxLQUFNRixHQXVDeEMsT0E3QldELEVBQUFJLFVBQUFDLFVBQVAsV0RyQkksSUNxQmEsSUFBQUMsRUFBQSxHQUFBQyxFQUFBLEVBQUFBLEVBQUFDLFVBQUFsQixPQUFBaUIsSUFBQUQsRUFBQUMsR0FBQUMsVUFBQUQsR0FDYixPQUFPVixhQUFBWSxTQUFTTixPQVNiSCxFQUFBSSxVQUFBTSxPQUFQLFNBQWNDLEdEeEJWLElDd0JvQixJQUFBQyxFQUFBLEdBQUFMLEVBQUEsRUFBQUEsRUFBQUMsVUFBQWxCLE9BQUFpQixJQUFBSyxFQUFBTCxFQUFBLEdBQUFDLFVBQUFELEdBQ3BCLE9BQU9SLFFBQUFjLFFBQU9DLFdBQUEsRUFBQTVCLGNBQUEsQ0FBQ2lCLEtBQU1RLEdBQVFDLEtBWW5CWixFQUFBRSxvQkFBZCxTQUFtRGEsRUFBU0osR0FDeEQsSUFBSyxJQUFJSyxLQUFRTCxFQUNWQSxFQUFJTSxlQUFlRCxJQUFTRCxFQUFLRSxlQUFlRCxLQUMvQ0QsRUFBS0MsR0FBUUwsRUFBSUssSUFDekIsT0FBT0QsR0FFZmYsRUEvQ0EsR0RpQkFMLFFBQVF1QixRQUFVbEIiLCJmaWxlIjoiTW9kZWwvTW9kZWwubWluLmVzbS5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fc3ByZWFkQXJyYXkgPSAodGhpcyAmJiB0aGlzLl9fc3ByZWFkQXJyYXkpIHx8IGZ1bmN0aW9uICh0bywgZnJvbSkge1xuICAgIGZvciAodmFyIGkgPSAwLCBpbCA9IGZyb20ubGVuZ3RoLCBqID0gdG8ubGVuZ3RoOyBpIDwgaWw7IGkrKywgaisrKVxuICAgICAgICB0b1tqXSA9IGZyb21baV07XG4gICAgcmV0dXJuIHRvO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciB2YWxpZGF0aW9uXzEgPSByZXF1aXJlKFwiLi4vdmFsaWRhdGlvblwiKTtcbnZhciB1dGlsc18xID0gcmVxdWlyZShcIi4uL3V0aWxzXCIpO1xudmFyIE1vZGVsID0gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBNb2RlbChtb2RlbCkge1xuICAgICAgICBNb2RlbC5jb25zdHJ1Y3RGcm9tT2JqZWN0KHRoaXMsIG1vZGVsKTtcbiAgICB9XG4gICAgTW9kZWwucHJvdG90eXBlLmhhc0Vycm9ycyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGFyZ3MgPSBbXTtcbiAgICAgICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGFyZ3VtZW50cy5sZW5ndGg7IF9pKyspIHtcbiAgICAgICAgICAgIGFyZ3NbX2ldID0gYXJndW1lbnRzW19pXTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdmFsaWRhdGlvbl8xLnZhbGlkYXRlKHRoaXMpO1xuICAgIH07XG4gICAgTW9kZWwucHJvdG90eXBlLmVxdWFscyA9IGZ1bmN0aW9uIChvYmopIHtcbiAgICAgICAgdmFyIGV4Y2VwdGlvbnMgPSBbXTtcbiAgICAgICAgZm9yICh2YXIgX2kgPSAxOyBfaSA8IGFyZ3VtZW50cy5sZW5ndGg7IF9pKyspIHtcbiAgICAgICAgICAgIGV4Y2VwdGlvbnNbX2kgLSAxXSA9IGFyZ3VtZW50c1tfaV07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHV0aWxzXzEuaXNFcXVhbC5hcHBseSh2b2lkIDAsIF9fc3ByZWFkQXJyYXkoW3RoaXMsIG9ial0sIGV4Y2VwdGlvbnMpKTtcbiAgICB9O1xuICAgIE1vZGVsLmNvbnN0cnVjdEZyb21PYmplY3QgPSBmdW5jdGlvbiAoc2VsZiwgb2JqKSB7XG4gICAgICAgIGZvciAodmFyIHByb3AgaW4gb2JqKVxuICAgICAgICAgICAgaWYgKG9iai5oYXNPd25Qcm9wZXJ0eShwcm9wKSAmJiBzZWxmLmhhc093blByb3BlcnR5KHByb3ApKVxuICAgICAgICAgICAgICAgIHNlbGZbcHJvcF0gPSBvYmpbcHJvcF07XG4gICAgICAgIHJldHVybiBzZWxmO1xuICAgIH07XG4gICAgcmV0dXJuIE1vZGVsO1xufSgpKTtcbmV4cG9ydHMuZGVmYXVsdCA9IE1vZGVsOyIsImltcG9ydCB7dmFsaWRhdGV9IGZyb20gXCIuLi92YWxpZGF0aW9uXCI7XG5pbXBvcnQgVmFsaWRhdGFibGUsIHtFcnJvcnN9IGZyb20gXCIuLi92YWxpZGF0aW9uL3R5cGVzXCI7XG5pbXBvcnQge2lzRXF1YWx9IGZyb20gXCIuLi91dGlsc1wiO1xuXG4vKipcbiAqIEFic3RyYWN0IGNsYXNzIHJlcHJlc2VudGluZyBhIFZhbGlkYXRhYmxlIE1vZGVsIG9iamVjdFxuICpcbiAqIE1vZGVsIG9iamVjdHMgbXVzdDpcbiAqICAtIEhhdmUgYWxsIHRoZWlyIHByb3BlcnRpZXMgZGVmaW5lZCBhcyBvcHRpb25hbDtcbiAqICAtIEhhdmUgYWxsIHRoZWlyIHByb3BlcnRpZXMgaW5pdGlhbGl6ZWQgKG9ubHkgdGhlICdAcmVxdWlyZWQoKScgZGVjb3JhdGVkIHByb3BlcnRpZXNcbiAqICA8c3Ryb25nPm5lZWQ8L3N0cm9uZz4gdG8gYmUgaW5pdGlhbGl6ZWQsIGJ1dCBhbGwgb2YgdGhlbSBzaG91bGQgYmUgYXMgZ29vZCBwcmFjdGljZSk7XG4gKlxuICogQGNsYXNzIE1vZGVsXG4gKiBAYWJzdHJhY3RcbiAqIEBpbXBsZW1lbnRzIFZhbGlkYXRhYmxlXG4gKiBAbmFtZXNwYWNlIE1vZGVsXG4gKiBAbWVtYmVyT2YgTW9kZWxcbiAqL1xuZXhwb3J0IGRlZmF1bHQgYWJzdHJhY3QgY2xhc3MgTW9kZWwgaW1wbGVtZW50cyBWYWxpZGF0YWJsZSB7XG4gICAgLyoqXG4gICAgICogQHBhcmFtIHtNb2RlbCB8IHt9fSBtb2RlbCBiYXNlIG9iamVjdCBmcm9tIHdoaWNoIHRvIHBvcHVsYXRlIHByb3BlcnRpZXMgZnJvbVxuICAgICAqIEBjb25zdHJ1Y3RvclxuICAgICAqIEBwcm90ZWN0ZWRcbiAgICAgKiBAc2VlIE1vZGVsI2NvbnN0cnVjdEZyb21PYmplY3RcbiAgICAgKi9cbiAgICBwcm90ZWN0ZWQgY29uc3RydWN0b3IobW9kZWw/OiBNb2RlbCB8IHt9KXtcbiAgICAgICAgTW9kZWwuY29uc3RydWN0RnJvbU9iamVjdCh0aGlzLCBtb2RlbCk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogVmFsaWRhdGVzIHRoZSBvYmplY3QgYWNjb3JkaW5nIHRvIGl0cyBkZWNvcmF0ZWQgcHJvcGVydGllc1xuICAgICAqXG4gICAgICogQHBhcmFtIHthbnl9IFthcmdzXVxuICAgICAqIEBtZW1iZXJPZiBNb2RlbFxuICAgICAqIEBzZWUgdmFsaWRhdGVcbiAgICAgKi9cbiAgICBwdWJsaWMgaGFzRXJyb3JzKC4uLmFyZ3M6IGFueVtdKTogRXJyb3Jze1xuICAgICAgICByZXR1cm4gdmFsaWRhdGUodGhpcyk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQ29tcGFyZSBvYmplY3QgZXF1YWxpdHkgcmVjdXJzaXZlbHlcbiAgICAgKiBAcGFyYW0ge2FueX0gb2JqIG9iamVjdCB0byBjb21wYXJlIHRvXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IFtleGNlcHRpb25zXSBwcm9wZXJ0eSBuYW1lcyB0byBiZSBleGNsdWRlZCBmcm9tIHRoZSBjb21wYXJpc29uXG4gICAgICogQG1lbWJlck9mIE1vZGVsXG4gICAgICovXG4gICAgcHVibGljIGVxdWFscyhvYmo6IGFueSwgLi4uZXhjZXB0aW9uczogc3RyaW5nW10pOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuIGlzRXF1YWwodGhpcywgb2JqLCAuLi5leGNlcHRpb25zKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiByZXBvcHVsYXRlcyB0aGUgT2JqZWN0IHByb3BlcnRpZXMgd2l0aCB0aGUgb25lcyBmcm9tIHRoZSBuZXcgb2JqZWN0XG4gICAgICpcbiAgICAgKiBAcGFyYW0ge1R9IHNlbGZcbiAgICAgKiBAcGFyYW0ge1R8IHt9fSBvYmpcbiAgICAgKiBAc3RhdGljXG4gICAgICogQGZ1bmN0aW9uIGNvbnN0cnVjdEZyb21PYmplY3RcbiAgICAgKiBAbWVtYmVyT2YgTW9kZWxcbiAgICAgKi9cbiAgICBwdWJsaWMgc3RhdGljIGNvbnN0cnVjdEZyb21PYmplY3Q8VCBleHRlbmRzIE1vZGVsPihzZWxmOiBULCBvYmo/OiBUIHwge30pe1xuICAgICAgICBmb3IgKGxldCBwcm9wIGluIG9iailcbiAgICAgICAgICAgIGlmKG9iai5oYXNPd25Qcm9wZXJ0eShwcm9wKSAmJiBzZWxmLmhhc093blByb3BlcnR5KHByb3ApKS8vIEB0cy1pZ25vcmVcbiAgICAgICAgICAgICAgICBzZWxmW3Byb3BdID0gb2JqW3Byb3BdO1xuICAgICAgICByZXR1cm4gc2VsZjtcbiAgICB9XG59Il19
