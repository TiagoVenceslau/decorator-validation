"use strict";var __extends=function(){var n=function(t,e){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r])})(t,e)};return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function r(){this.constructor=t}n(t,e),t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}}(),__importDefault=function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(exports,"__esModule",{value:!0});var Validator_1=__importDefault(require("./Validator")),constants_1=require("../constants"),PatternValidator=function(r){function e(t,e){return void 0===t&&(t=constants_1.ValidationKeys.PATTERN),void 0===e&&(e=constants_1.DEFAULT_ERROR_MESSAGES.PATTERN),r.call(this,t,e)||this}return __extends(e,r),e.prototype.getPattern=function(t){if(!e.regexpParser.test(t))return new RegExp(t);t=t.match(e.regexpParser);return new RegExp(t[1],t[2])},e.prototype.hasErrors=function(t,e,r){if(t)return(e="string"==typeof e?this.getPattern(e):e).test(t)?void 0:this.getMessage(r||this.message)},e.regexpParser=new RegExp("^/(.+)/([gimus]*)$"),e}(Validator_1.default);exports.default=PatternValidator;
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZhbGlkYXRpb24vVmFsaWRhdG9ycy9QYXR0ZXJuVmFsaWRhdG9yLmpzIiwidmFsaWRhdGlvbi9WYWxpZGF0b3JzL1BhdHRlcm5WYWxpZGF0b3IudHMiXSwibmFtZXMiOlsiX19leHRlbmRzIiwiZCIsImV4dGVuZFN0YXRpY3MiLCJPYmplY3QiLCJzZXRQcm90b3R5cGVPZiIsIkFycmF5IiwiYiIsIl9fcHJvdG9fXyIsInAiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJTdHJpbmciLCJfXyIsInRoaXMiLCJjb25zdHJ1Y3RvciIsImNyZWF0ZSIsIl9faW1wb3J0RGVmYXVsdCIsIm1vZCIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJWYWxpZGF0b3JfMSIsInJlcXVpcmUiLCJjb25zdGFudHNfMSIsIlBhdHRlcm5WYWxpZGF0b3IiLCJfc3VwZXIiLCJrZXkiLCJtZXNzYWdlIiwiVmFsaWRhdGlvbktleXMiLCJQQVRURVJOIiwiREVGQVVMVF9FUlJPUl9NRVNTQUdFUyIsImdldFBhdHRlcm4iLCJwYXR0ZXJuIiwicmVnZXhwUGFyc2VyIiwidGVzdCIsIlJlZ0V4cCIsIm1hdGNoIiwiaGFzRXJyb3JzIiwidW5kZWZpbmVkIiwiZ2V0TWVzc2FnZSJdLCJtYXBwaW5ncyI6ImFBQ0EsSUFBSUEsVUFBeUMsV0FBekNBLElBQUFBLEVBQWEsU0FBUUMsRUFBS0QsR0FHakIsT0FGTEUsRUFBZ0JDLE9BQUFDLGdCQUNoQkYsQ0FBQUEsVUFBZ0JDLGNBQUFFLE9BQ1gsU0FBQUosRUFBQUssR0FBQUwsRUFBQU0sVUFBQUQsSUFBRUMsU0FBV04sRUFBQUssR0FBQSxJQUFBLElBQUFFLEtBQUFGLEVBQUFILE9BQUFNLFVBQUFDLGVBQUFDLEtBQUFMLEVBQUFFLEtBQUFQLEVBQUFPLEdBQUFGLEVBQUFFLE1BQXlCUCxFQUFBSyxJQUFvQyxPQUMzRSxTQUFBTCxFQUFBSyxHQUFrQixHQUFBLG1CQUFBQSxHQUFBLE9BQUFBLEVBQXFCSCxNQUFNLElBQUNNLFVBQVVDLHVCQUE0QkUsT0FBT04sR0FBUixpQ0FGdkYsU0FBQU8sSUFBQUMsS0FBQUMsWUFBQWQsRUFFc0JDLEVBQUFELEVBQUFLLEdBUXRCTCxFQUFFUSxVQUFrQixPQUFOSCxFQUFhSCxPQUFPYSxPQUFPVixJQUFNTyxFQUFHSixVQUFZSCxFQUFFRyxVQUFXLElBQUlJLElBWjFDLEdBZXpDSSxnQkFBb0QsU0FBVUMsR0FSOUQsT0FBT0EsR0FBVWpCLEVBQVZrQixXQUFnQkQsRUFBQSxDQUFBRSxRQUFBRixJQVczQmYsT0FBT2tCLGVBQWVDLFFBQVMsYUFBYyxDQUFFQyxPQUFPLElDbkJ0RCxJQUFBQyxZQUFBUCxnQkFBQVEsUUFBQSxnQkFDQUMsWUFBQUQsUUFBQSxnQkFVQUUsaUJBQUEsU0FBQUMsR0FHSSxTQUFBRCxFQUFZRSxFQUFzQ0MsR0RObEQsWUNNWSxJQUFBRCxJQUFBQSxFQUFjSCxZQUFBSyxlQUFlQyxjQUFTLElBQUFGLElBQUFBLEVBQWtCSixZQUFBTyx1QkFBdUJELFNBQ3ZGSixFQUFBakIsS0FBQUcsS0FBTWUsRUFBS0MsSUFBUWhCLEtBZ0IzQixPQXBCOENkLFVBQUEyQixFQUFBQyxHQU9sQ0QsRUFBQWxCLFVBQUF5QixXQUFSLFNBQW1CQyxHQUNmLElBQUtSLEVBQWlCUyxhQUFhQyxLQUFLRixHQUNwQyxPQUFPLElBQUlHLE9BQU9ILEdBQ2hCSSxFQUFhSixFQUFRSSxNQUFNWixFQUFpQlMsY0FDbEQsT0FBTyxJQUFJRSxPQUFPQyxFQUFNLEdBQUlBLEVBQU0sS0FHdENaLEVBQUFsQixVQUFBK0IsVUFBQSxTQUFVakIsRUFBZVksRUFBMEJMLEdBQy9DLEdBQUtQLEVBR0wsT0FEQVksRUFBNkIsaUJBQVpBLEVBQXVCckIsS0FBS29CLFdBQVdDLEdBQVdBLEdBQ25ERSxLQUFLZCxRQUFvRGtCLEVBQTNDM0IsS0FBSzRCLFdBQVdaLEdBQVdoQixLQUFLZ0IsVUFqQjFDSCxFQUFBUyxhQUF1QixJQUFJRSxPQUFPLHNCQW1COURYLEVBcEJBLENBQThDSCxZQUFBSixTQUE5Q0UsUUFBQUssUUFBcUJBIiwiZmlsZSI6InZhbGlkYXRpb24vVmFsaWRhdG9ycy9QYXR0ZXJuVmFsaWRhdG9yLm1pbi5lc20uanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2V4dGVuZHMgPSAodGhpcyAmJiB0aGlzLl9fZXh0ZW5kcykgfHwgKGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgZXh0ZW5kU3RhdGljcyA9IGZ1bmN0aW9uIChkLCBiKSB7XG4gICAgICAgIGV4dGVuZFN0YXRpY3MgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHxcbiAgICAgICAgICAgICh7IF9fcHJvdG9fXzogW10gfSBpbnN0YW5jZW9mIEFycmF5ICYmIGZ1bmN0aW9uIChkLCBiKSB7IGQuX19wcm90b19fID0gYjsgfSkgfHxcbiAgICAgICAgICAgIGZ1bmN0aW9uIChkLCBiKSB7IGZvciAodmFyIHAgaW4gYikgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChiLCBwKSkgZFtwXSA9IGJbcF07IH07XG4gICAgICAgIHJldHVybiBleHRlbmRTdGF0aWNzKGQsIGIpO1xuICAgIH07XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChkLCBiKSB7XG4gICAgICAgIGlmICh0eXBlb2YgYiAhPT0gXCJmdW5jdGlvblwiICYmIGIgIT09IG51bGwpXG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2xhc3MgZXh0ZW5kcyB2YWx1ZSBcIiArIFN0cmluZyhiKSArIFwiIGlzIG5vdCBhIGNvbnN0cnVjdG9yIG9yIG51bGxcIik7XG4gICAgICAgIGV4dGVuZFN0YXRpY3MoZCwgYik7XG4gICAgICAgIGZ1bmN0aW9uIF9fKCkgeyB0aGlzLmNvbnN0cnVjdG9yID0gZDsgfVxuICAgICAgICBkLnByb3RvdHlwZSA9IGIgPT09IG51bGwgPyBPYmplY3QuY3JlYXRlKGIpIDogKF9fLnByb3RvdHlwZSA9IGIucHJvdG90eXBlLCBuZXcgX18oKSk7XG4gICAgfTtcbn0pKCk7XG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgVmFsaWRhdG9yXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4vVmFsaWRhdG9yXCIpKTtcbnZhciBjb25zdGFudHNfMSA9IHJlcXVpcmUoXCIuLi9jb25zdGFudHNcIik7XG52YXIgUGF0dGVyblZhbGlkYXRvciA9IChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgX19leHRlbmRzKFBhdHRlcm5WYWxpZGF0b3IsIF9zdXBlcik7XG4gICAgZnVuY3Rpb24gUGF0dGVyblZhbGlkYXRvcihrZXksIG1lc3NhZ2UpIHtcbiAgICAgICAgaWYgKGtleSA9PT0gdm9pZCAwKSB7IGtleSA9IGNvbnN0YW50c18xLlZhbGlkYXRpb25LZXlzLlBBVFRFUk47IH1cbiAgICAgICAgaWYgKG1lc3NhZ2UgPT09IHZvaWQgMCkgeyBtZXNzYWdlID0gY29uc3RhbnRzXzEuREVGQVVMVF9FUlJPUl9NRVNTQUdFUy5QQVRURVJOOyB9XG4gICAgICAgIHJldHVybiBfc3VwZXIuY2FsbCh0aGlzLCBrZXksIG1lc3NhZ2UpIHx8IHRoaXM7XG4gICAgfVxuICAgIFBhdHRlcm5WYWxpZGF0b3IucHJvdG90eXBlLmdldFBhdHRlcm4gPSBmdW5jdGlvbiAocGF0dGVybikge1xuICAgICAgICBpZiAoIVBhdHRlcm5WYWxpZGF0b3IucmVnZXhwUGFyc2VyLnRlc3QocGF0dGVybikpXG4gICAgICAgICAgICByZXR1cm4gbmV3IFJlZ0V4cChwYXR0ZXJuKTtcbiAgICAgICAgdmFyIG1hdGNoID0gcGF0dGVybi5tYXRjaChQYXR0ZXJuVmFsaWRhdG9yLnJlZ2V4cFBhcnNlcik7XG4gICAgICAgIHJldHVybiBuZXcgUmVnRXhwKG1hdGNoWzFdLCBtYXRjaFsyXSk7XG4gICAgfTtcbiAgICBQYXR0ZXJuVmFsaWRhdG9yLnByb3RvdHlwZS5oYXNFcnJvcnMgPSBmdW5jdGlvbiAodmFsdWUsIHBhdHRlcm4sIG1lc3NhZ2UpIHtcbiAgICAgICAgaWYgKCF2YWx1ZSlcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgcGF0dGVybiA9IHR5cGVvZiBwYXR0ZXJuID09PSAnc3RyaW5nJyA/IHRoaXMuZ2V0UGF0dGVybihwYXR0ZXJuKSA6IHBhdHRlcm47XG4gICAgICAgIHJldHVybiAhcGF0dGVybi50ZXN0KHZhbHVlKSA/IHRoaXMuZ2V0TWVzc2FnZShtZXNzYWdlIHx8IHRoaXMubWVzc2FnZSkgOiB1bmRlZmluZWQ7XG4gICAgfTtcbiAgICBQYXR0ZXJuVmFsaWRhdG9yLnJlZ2V4cFBhcnNlciA9IG5ldyBSZWdFeHAoXCJeXFwvKC4rKVxcLyhbZ2ltdXNdKikkXCIpO1xuICAgIHJldHVybiBQYXR0ZXJuVmFsaWRhdG9yO1xufShWYWxpZGF0b3JfMS5kZWZhdWx0KSk7XG5leHBvcnRzLmRlZmF1bHQgPSBQYXR0ZXJuVmFsaWRhdG9yOyIsImltcG9ydCBWYWxpZGF0b3IgZnJvbSBcIi4vVmFsaWRhdG9yXCI7XG5pbXBvcnQge1ZhbGlkYXRpb25LZXlzLCBERUZBVUxUX0VSUk9SX01FU1NBR0VTfSBmcm9tIFwiLi4vY29uc3RhbnRzXCI7XG5pbXBvcnQge0Vycm9yc30gZnJvbSBcIi4uL3R5cGVzXCI7XG5cbi8qKlxuICogUGF0dGVybiBWYWxpZGF0b3JcbiAqXG4gKiBAY2xhc3MgUGF0dGVyblZhbGlkYXRvclxuICogQGV4dGVuZHMgVmFsaWRhdG9yXG4gKiBAbWVtYmVyT2YgVmFsaWRhdG9yc1xuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQYXR0ZXJuVmFsaWRhdG9yIGV4dGVuZHMgVmFsaWRhdG9yIHtcbiAgICBwcml2YXRlIHN0YXRpYyByZWFkb25seSByZWdleHBQYXJzZXI6IFJlZ0V4cCA9IG5ldyBSZWdFeHAoXCJeXFwvKC4rKVxcLyhbZ2ltdXNdKikkXCIpO1xuXG4gICAgY29uc3RydWN0b3Ioa2V5OiBzdHJpbmcgPSBWYWxpZGF0aW9uS2V5cy5QQVRURVJOLCBtZXNzYWdlOiBzdHJpbmcgPSBERUZBVUxUX0VSUk9SX01FU1NBR0VTLlBBVFRFUk4pe1xuICAgICAgICBzdXBlcihrZXksIG1lc3NhZ2UpO1xuICAgIH1cblxuICAgIHByaXZhdGUgZ2V0UGF0dGVybihwYXR0ZXJuOiBzdHJpbmcpOiBSZWdFeHAge1xuICAgICAgICBpZiAoIVBhdHRlcm5WYWxpZGF0b3IucmVnZXhwUGFyc2VyLnRlc3QocGF0dGVybikpXG4gICAgICAgICAgICByZXR1cm4gbmV3IFJlZ0V4cChwYXR0ZXJuKTtcbiAgICAgICAgY29uc3QgbWF0Y2g6IGFueSA9IHBhdHRlcm4ubWF0Y2goUGF0dGVyblZhbGlkYXRvci5yZWdleHBQYXJzZXIpO1xuICAgICAgICByZXR1cm4gbmV3IFJlZ0V4cChtYXRjaFsxXSwgbWF0Y2hbMl0pO1xuICAgIH1cblxuICAgIGhhc0Vycm9ycyh2YWx1ZTogc3RyaW5nLCBwYXR0ZXJuOiBSZWdFeHAgfCBzdHJpbmcsIG1lc3NhZ2U/OiBzdHJpbmcpOiBFcnJvcnMge1xuICAgICAgICBpZiAoIXZhbHVlKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICBwYXR0ZXJuID0gdHlwZW9mIHBhdHRlcm4gPT09ICdzdHJpbmcnID8gdGhpcy5nZXRQYXR0ZXJuKHBhdHRlcm4pIDogcGF0dGVybjtcbiAgICAgICAgcmV0dXJuICFwYXR0ZXJuLnRlc3QodmFsdWUpID8gdGhpcy5nZXRNZXNzYWdlKG1lc3NhZ2UgfHwgdGhpcy5tZXNzYWdlKSA6IHVuZGVmaW5lZDtcbiAgICB9XG59Il19
